MJ.add("Vector",function(){Vector=function(a,b){this.x=a||0;this.y=b||0};Vector.RELATION={getAngle:["dotMul","getMod"],getRadian:["dotMul","getMod"],reflex:["getNormal","getAngle","sub","mulNum","dotMul"],mirror:["reflex","getNegative"]},Vector.prototype={toArray:function(){return[this.x,this.y]},add:function(a){return new MJ.Vector(this.x+a.x,this.y+a.y)},sub:function(a){return new MJ.Vector(this.x-a.x,this.y-a.y)},xyToVector:function(a){return new MJ.Vector(a.x,a.y)},getMod:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},mulNum:function(a){this.x=this.x*a;this.y=this.y*a;return this},getNegative:function(){this.x=-this.x;this.y=-this.y;return this},dotMul:function(a){return this.x*a.x+this.y*a.y},getAngle:function(a){return Math.acos(this.dotMul(a)/(this.getMod()*a.getMod()))*180/Math.PI},getRadian:function(){return Math.acos(this.dotMul(vector)/(this.getMod()*v.getMod()))},getNormal:function(){return new MJ.Vector(this.y/(Math.sqrt(this.x*this.x+this.y*this.y)),-this.x/(Math.sqrt(this.x*this.x+this.y*this.y)))},reflex:function(a){var b=a.getNormal();var c=this.getAngle(b);return this.sub(b.mulNum(2*this.dotMul(b)))},mirror:function(a){return this.reflex(a).getNegative()},isZero:function(){if(this.x==0&&this.y==0){return true}else{return false}},isIn:function(f,a,g){var e=this.sub(f),d=this.sub(a);if(e.x>=0&&e.y>=0&&d.x<=0&&d.y<=0){if(g){var h=f.add(a).mulNum(0.5);return this.getQ(h)}else{return -1}}else{return false}},getQ:function(a){var b=this.sub(a);if(b.x>=0&&b.y>=0){return 4}else{if(b.x<0&&b.y>=0){return 3}else{if(b.x<0&&b.y<0){return 2}else{if(b.x>=0&&b.y<0){return 1}}}}},toString:function(){return this.x+":"+this.y}};return Vector});
