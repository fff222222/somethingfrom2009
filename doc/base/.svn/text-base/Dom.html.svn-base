<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
	<head>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
		<meta name="generator" content="JsDoc Toolkit" />
		
		<title>JsDoc Reference - Dom</title>

		<style type="text/css">
			/* default.css */
body
{
	font: 12px "Lucida Grande", Tahoma, Arial, Helvetica, sans-serif;
	width: 800px;
}

.header
{
	clear: both;
	background-color: #ccc;
	padding: 8px;
}

h1
{
	font-size: 150%;
	font-weight: bold;
	padding: 0;
	margin: 1em 0 0 .3em;
}

hr
{
	border: none 0;
	border-top: 1px solid #7F8FB1;
	height: 1px;
}

pre.code
{
	display: block;
	padding: 8px;
	border: 1px dashed #ccc;
}

#index
{
	margin-top: 24px;
	float: left;
	width: 160px;
	position: absolute;
	left: 8px;
	background-color: #F3F3F3;
	padding: 8px;
}

#content
{
	margin-left: 190px;
	width: 600px;
}

.classList
{
	list-style-type: none;
	padding: 0;
	margin: 0 0 0 8px;
	font-family: arial, sans-serif;
	font-size: 1em;
	overflow: auto;
}

.classList li
{
	padding: 0;
	margin: 0 0 8px 0;
}

.summaryTable { width: 100%; }

h1.classTitle
{
	font-size:170%;
	line-height:130%;
}

h2 { font-size: 110%; }
caption, div.sectionTitle
{
	background-color: #7F8FB1;
	color: #fff;
	font-size:130%;
	text-align: left;
	padding: 2px 6px 2px 6px;
	border: 1px #7F8FB1 solid;
}

div.sectionTitle { margin-bottom: 8px; }
.summaryTable thead { display: none; }

.summaryTable td
{
	vertical-align: top;
	padding: 4px;
	border-bottom: 1px #7F8FB1 solid;
	border-right: 1px #7F8FB1 solid;
}

/*col#summaryAttributes {}*/
.summaryTable td.attributes
{
	border-left: 1px #7F8FB1 solid;
	width: 140px;
	text-align: right;
}

td.attributes, .fixedFont
{
	line-height: 15px;
	color: #002EBE;
	font-family: "Courier New",Courier,monospace;
	font-size: 13px;
}

.summaryTable td.nameDescription
{
	text-align: left;
	font-size: 13px;
	line-height: 15px;
}

.summaryTable td.nameDescription, .description
{
	line-height: 15px;
	padding: 4px;
	padding-left: 4px;
}

.summaryTable { margin-bottom: 8px; }

ul.inheritsList
{
	list-style: square;
	margin-left: 20px;
	padding-left: 0;
}

.detailList {
	margin-left: 20px; 
	line-height: 15px;
}
.detailList dt { margin-left: 20px; }

.detailList .heading
{
	font-weight: bold;
	padding-bottom: 6px;
	margin-left: 0;
}

.light, td.attributes, .light a:link, .light a:visited
{
	color: #777;
	font-style: italic;
}

.fineprint
{
	text-align: right;
	font-size: 10px;
}
		</style>
	</head>

	<body>
<!-- ============================== header ================================= -->	
		<!-- begin static/header.html -->
		<div id="header">
</div>
		<!-- end static/header.html -->

<!-- ============================== classes index ============================ -->
		<div id="index">
			<!-- begin publish.classesIndex -->
			<div align="center"><a href="../index.html">Class Index</a>
| <a href="../files.html">File Index</a></div>
<hr />
<h2>Classes</h2>
<ul class="classList">
	
	<li><i><a href="../symbols/_global_.html">_global_</a></i></li>
	
	<li><a href="../symbols/Dom.html">Dom</a></li>
	
</ul>
<hr />
			<!-- end publish.classesIndex -->
		</div>
		
		<div id="content">
<!-- ============================== class title ============================ -->
			<h1 class="classTitle">
				
				Class Dom
			</h1>

<!-- ============================== class summary ========================== -->			
			<p class="description">
				
				
			
				Dom
				
				
					<br /><i>Defined in: </i> <a href="../symbols/src/aa.js.html">aa.js</a>.
				
			</p>

<!-- ============================== constructor summary ==================== -->			
			
			<table class="summaryTable" cellspacing="0" summary="A summary of the constructor documented in the class Dom.">
				<caption>Class Summary</caption>
				<thead>
					<tr>
						<th scope="col">Constructor Attributes</th>
						<th scope="col">Constructor Name and Description</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td class="attributes">&nbsp;</td>
						<td class="nameDescription" >
							<div class="fixedFont">
								<b><a href="../symbols/Dom.html#constructor">Dom</a></b>()
							</div>
							<div class="description">一些操作dom元素的方法的集合</div>
						</td>
					</tr>
				</tbody>
			</table>
			

<!-- ============================== properties summary ===================== -->
			

<!-- ============================== methods summary ======================== -->
			
				
				
				<table class="summaryTable" cellspacing="0" summary="A summary of the methods documented in the class Dom.">
					<caption>Method Summary</caption>
					<thead>
						<tr>
							<th scope="col">Method Attributes</th>
							<th scope="col">Method Name and Description</th>
						</tr>
					</thead>
					<tbody>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#addClass">addClass</a></b>(ele, className)
								</div>
								<div class="description">向某个元素的classname添加一个class
此函数的特点是防止了误判断,例如 如果原来的classname是"realname" 再向其添加"name"的时候 不会将realname中的name当成已经存在的name.</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#createElement">createElement</a></b>(tagName, parentNode, innerHTML, attributes, styles, event)
								</div>
								<div class="description">一次性完成创建和初始化某个dom元素的操作,在特定情况下使用节省代码
简单的创建不推荐使用</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#css">css</a></b>(ele, attr, value)
								</div>
								<div class="description">获取或者设置css样式</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#get">get</a></b>(query)
								</div>
								<div class="description">通过选择器获取选择后的第一个元素</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#getAllClass">getAllClass</a></b>(ele)
								</div>
								<div class="description">获取某个元素上所有classname的数组</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#getAttrJson">getAttrJson</a></b>(ele, attr)
								</div>
								<div class="description">获取类似style里的结构的元素属性的json表示,属性里这样写:  aa:value;bb:value2;cc:value3;</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#getByClass">getByClass</a></b>(className, tag, root)
								</div>
								<div class="description">通过class获取元素,返回一个元素的数组</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#getById">getById</a></b>(id)
								</div>
								<div class="description">根据id获取元素</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#getByTag">getByTag</a></b>(tagName, root)
								</div>
								<div class="description">增强的通过tagname获取元素</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#getCss">getCss</a></b>(操作的元素, 索引键, haspx)
								</div>
								<div class="description">获取当前在元素上生效的css属性的值</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#getCursorPos">getCursorPos</a></b>(ele, func)
								</div>
								<div class="description">在输入框中获取光标的坐标,并将此坐标传入第二个参数的函数中</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#getDocumentHeight">getDocumentHeight</a></b>()
								</div>
								<div class="description">获取可视区域高度</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#getDocumentWidth">getDocumentWidth</a></b>()
								</div>
								<div class="description">获取可视区域宽度</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#getMousePos">getMousePos</a></b>(ev)
								</div>
								<div class="description">获取鼠标位置</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#getOffsetSize">getOffsetSize</a></b>(ele, )
								</div>
								<div class="description">获取offset大小,带有边框和padding</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#getScrollXY">getScrollXY</a></b>()
								</div>
								<div class="description">获取页面滚动过的高和宽</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#hasClass">hasClass</a></b>(class_a, class_b)
								</div>
								<div class="description">有的时候某个元素会同时拥有两个class,这个时侯判断class_a 是否是class_b的一部分
也可以第一个参数是dom元素,第二个是要判断的className</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#insertAfter">insertAfter</a></b>(newEl, targetEl)
								</div>
								<div class="description">向某个元素后面插入元素</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#mixStyle">mixStyle</a></b>(ele, styles)
								</div>
								<div class="description">将一个json的style表示形式赋值到一个元素的style上,直接赋值无法正常运行,所以分开赋值
例如:
mixStyle(M.dom.get("block2"),{
  backgroundColor:"#aaa",
  height:"200px"
})</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#place">place</a></b>(ele, point)
								</div>
								<div class="description">获取或者设置位置</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#query">query</a></b>(query)
								</div>
								<div class="description">通过选择器选择元素,总是返回数组</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#removeClass">removeClass</a></b>(ele, className)
								</div>
								<div class="description">从某个元素的classname里移除一个class</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#replace">replace</a></b>(newEl, targetEl)
								</div>
								<div class="description">将新元素放到旧元素原来的位置,删除旧的元素</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#setAttrs">setAttrs</a></b>(ele, details)
								</div>
								<div class="description">一次性赋予多个属性值</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#setInnerHTML">setInnerHTML</a></b>(el, html)
								</div>
								<div class="description">防止innerHTML的内存泄露的危险</div>
							</td>
						</tr>
					
						<tr>
							<td class="attributes">&nbsp;</td>
							<td class="nameDescription">
								<div class="fixedFont"><b><a href="../symbols/Dom.html#str2ele">str2ele</a></b>()
								</div>
								<div class="description"></div>
							</td>
						</tr>
					
					</tbody>
				</table>
				
				
				
			
<!-- ============================== events summary ======================== -->
			

<!-- ============================== constructor details ==================== -->		
			
			<div class="details"><a name="constructor"> </a>
				<div class="sectionTitle">
					Class Detail
				</div>
				
				<div class="fixedFont">
						<b>Dom</b>()
				</div>
				
				<div class="description">
					一些操作dom元素的方法的集合
					
				</div>
				
				
				
				
					
					
					
					
					
					
					

			</div>
			

<!-- ============================== field details ========================== -->		
			

<!-- ============================== method details ========================= -->		
			
				<div class="sectionTitle">
					Method Detail
				</div>
				
					<a name="addClass"> </a>
					<div class="fixedFont">
					
					
					<b>addClass</b>(ele, className)
					
					</div>
					<div class="description">
						向某个元素的classname添加一个class
此函数的特点是防止了误判断,例如 如果原来的classname是"realname" 再向其添加"name"的时候 不会将realname中的name当成已经存在的name.
从而精确地判断是否已经存在这个class了.
虽然字符串操作可能会耗费性能,对性能要求过高的情况避免使用
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<span class="light fixedFont">{element}</span> <b>ele</b>
									
								</dt>
								<dd>操作的元素</dd>
							
								<dt>
									<span class="light fixedFont">{string}</span> <b>className</b>
									
								</dt>
								<dd>添加的classname</dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="createElement"> </a>
					<div class="fixedFont">
					
					
					<b>createElement</b>(tagName, parentNode, innerHTML, attributes, styles, event)
					
					</div>
					<div class="description">
						一次性完成创建和初始化某个dom元素的操作,在特定情况下使用节省代码
简单的创建不推荐使用
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<span class="light fixedFont">{string}</span> <b>tagName</b>
									
								</dt>
								<dd>标签名</dd>
							
								<dt>
									<span class="light fixedFont">{ele}</span> <b>parentNode</b>
									
								</dt>
								<dd>父元素也可以用p简写</dd>
							
								<dt>
									<span class="light fixedFont">{string}</span> <b>innerHTML</b>
									
								</dt>
								<dd>内容</dd>
							
								<dt>
									<span class="light fixedFont">{json}</span> <b>attributes</b>
									
								</dt>
								<dd>属性值对</dd>
							
								<dt>
									<span class="light fixedFont">{json}</span> <b>styles</b>
									
								</dt>
								<dd>要赋予的样式</dd>
							
								<dt>
									<span class="light fixedFont">{json}</span> <b>event</b>
									
								</dt>
								<dd>绑定的事件 例如:event={type:"click",func:function(){}}</dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="css"> </a>
					<div class="fixedFont">
					
					
					<b>css</b>(ele, attr, value)
					
					</div>
					<div class="description">
						获取或者设置css样式
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<span class="light fixedFont">{element}</span> <b>ele</b>
									
								</dt>
								<dd>元素</dd>
							
								<dt>
									<span class="light fixedFont">{string}</span> <b>attr</b>
									
								</dt>
								<dd>属性名</dd>
							
								<dt>
									<span class="light fixedFont">{string}</span> <b>value</b>
									
								</dt>
								<dd>属性值,如果没有此参数则是设置属性值,否则是获取</dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="get"> </a>
					<div class="fixedFont">
					
					<span class="light">{element}</span>
					<b>get</b>(query)
					
					</div>
					<div class="description">
						通过选择器获取选择后的第一个元素
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<span class="light fixedFont">{object}</span> <b>query</b>
									
								</dt>
								<dd>选择器</dd>
							
							</dl>
						
						
						
						
						
							<dl class="detailList">
							<dt class="heading">Returns:</dt>
							
								<dd><span class="light fixedFont">{element}</span> </dd>
							
							</dl>
						
						
						

					<hr />
				
					<a name="getAllClass"> </a>
					<div class="fixedFont">
					
					<span class="light">{array}</span>
					<b>getAllClass</b>(ele)
					
					</div>
					<div class="description">
						获取某个元素上所有classname的数组
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<span class="light fixedFont">{element}</span> <b>ele</b>
									
								</dt>
								<dd>操作的元素</dd>
							
							</dl>
						
						
						
						
						
							<dl class="detailList">
							<dt class="heading">Returns:</dt>
							
								<dd><span class="light fixedFont">{array}</span> </dd>
							
							</dl>
						
						
						

					<hr />
				
					<a name="getAttrJson"> </a>
					<div class="fixedFont">
					
					<span class="light">{json}</span>
					<b>getAttrJson</b>(ele, attr)
					
					</div>
					<div class="description">
						获取类似style里的结构的元素属性的json表示,属性里这样写:  aa:value;bb:value2;cc:value3;
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<span class="light fixedFont">{element}</span> <b>ele</b>
									
								</dt>
								<dd>元素</dd>
							
								<dt>
									<span class="light fixedFont">{string}</span> <b>attr</b>
									
								</dt>
								<dd>属性的键名</dd>
							
							</dl>
						
						
						
						
						
							<dl class="detailList">
							<dt class="heading">Returns:</dt>
							
								<dd><span class="light fixedFont">{json}</span> 键值对</dd>
							
							</dl>
						
						
						

					<hr />
				
					<a name="getByClass"> </a>
					<div class="fixedFont">
					
					<span class="light">{array}</span>
					<b>getByClass</b>(className, tag, root)
					
					</div>
					<div class="description">
						通过class获取元素,返回一个元素的数组
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<span class="light fixedFont">{string}</span> <b>className</b>
									
								</dt>
								<dd>要获取的元素的类名</dd>
							
								<dt>
									<span class="light fixedFont">{string}</span> <b>tag</b>
									
								</dt>
								<dd>元素的tagname 可以省略</dd>
							
								<dt>
									<span class="light fixedFont">{element}</span> <b>root</b>
									
								</dt>
								<dd>根元素</dd>
							
							</dl>
						
						
						
						
						
							<dl class="detailList">
							<dt class="heading">Returns:</dt>
							
								<dd><span class="light fixedFont">{array}</span> 元素数组</dd>
							
							</dl>
						
						
						

					<hr />
				
					<a name="getById"> </a>
					<div class="fixedFont">
					
					<span class="light">{element}</span>
					<b>getById</b>(id)
					
					</div>
					<div class="description">
						根据id获取元素
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<span class="light fixedFont">{string}</span> <b>id</b>
									
								</dt>
								<dd>元素id</dd>
							
							</dl>
						
						
						
						
						
							<dl class="detailList">
							<dt class="heading">Returns:</dt>
							
								<dd><span class="light fixedFont">{element}</span> </dd>
							
							</dl>
						
						
						

					<hr />
				
					<a name="getByTag"> </a>
					<div class="fixedFont">
					
					<span class="light">{array}</span>
					<b>getByTag</b>(tagName, root)
					
					</div>
					<div class="description">
						增强的通过tagname获取元素
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<span class="light fixedFont">{string}</span> <b>tagName</b>
									
								</dt>
								<dd>元素名称</dd>
							
								<dt>
									<span class="light fixedFont">{element}</span> <b>root</b>
									
								</dt>
								<dd>根元素</dd>
							
							</dl>
						
						
						
						
						
							<dl class="detailList">
							<dt class="heading">Returns:</dt>
							
								<dd><span class="light fixedFont">{array}</span> 元素数组</dd>
							
							</dl>
						
						
						

					<hr />
				
					<a name="getCss"> </a>
					<div class="fixedFont">
					
					
					<b>getCss</b>(操作的元素, 索引键, haspx)
					
					</div>
					<div class="description">
						获取当前在元素上生效的css属性的值
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<span class="light fixedFont">{element}</span> <b>操作的元素</b>
									
								</dt>
								<dd></dd>
							
								<dt>
									<span class="light fixedFont">{string}</span> <b>索引键</b>
									
								</dt>
								<dd></dd>
							
								<dt>
									<b>haspx</b>
									
								</dt>
								<dd></dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="getCursorPos"> </a>
					<div class="fixedFont">
					
					
					<b>getCursorPos</b>(ele, func)
					
					</div>
					<div class="description">
						在输入框中获取光标的坐标,并将此坐标传入第二个参数的函数中
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<span class="light fixedFont">{element}</span> <b>ele</b>
									
								</dt>
								<dd>输入框元素</dd>
							
								<dt>
									<span class="light fixedFont">{function}</span> <b>func</b>
									
								</dt>
								<dd>每次输入都会触发的函数</dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="getDocumentHeight"> </a>
					<div class="fixedFont">
					
					<span class="light">{number}</span>
					<b>getDocumentHeight</b>()
					
					</div>
					<div class="description">
						获取可视区域高度
						
						
					</div>
					
					
					
						
						
						
						
						
							<dl class="detailList">
							<dt class="heading">Returns:</dt>
							
								<dd><span class="light fixedFont">{number}</span> </dd>
							
							</dl>
						
						
						

					<hr />
				
					<a name="getDocumentWidth"> </a>
					<div class="fixedFont">
					
					<span class="light">{number}</span>
					<b>getDocumentWidth</b>()
					
					</div>
					<div class="description">
						获取可视区域宽度
						
						
					</div>
					
					
					
						
						
						
						
						
							<dl class="detailList">
							<dt class="heading">Returns:</dt>
							
								<dd><span class="light fixedFont">{number}</span> </dd>
							
							</dl>
						
						
						

					<hr />
				
					<a name="getMousePos"> </a>
					<div class="fixedFont">
					
					<span class="light">{vector}</span>
					<b>getMousePos</b>(ev)
					
					</div>
					<div class="description">
						获取鼠标位置
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<span class="light fixedFont">{event}</span> <b>ev</b>
									
								</dt>
								<dd>当前的事件对象</dd>
							
							</dl>
						
						
						
						
						
							<dl class="detailList">
							<dt class="heading">Returns:</dt>
							
								<dd><span class="light fixedFont">{vector}</span> </dd>
							
							</dl>
						
						
						

					<hr />
				
					<a name="getOffsetSize"> </a>
					<div class="fixedFont">
					
					
					<b>getOffsetSize</b>(ele, )
					
					</div>
					<div class="description">
						获取offset大小,带有边框和padding
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<span class="light fixedFont">{element}</span> <b>ele</b>
									
								</dt>
								<dd>元素</dd>
							
								<dt>
									<span class="light fixedFont">{vector}</span> <b></b>
									
								</dt>
								<dd></dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="getScrollXY"> </a>
					<div class="fixedFont">
					
					<span class="light">{vector}</span>
					<b>getScrollXY</b>()
					
					</div>
					<div class="description">
						获取页面滚动过的高和宽
						
						
					</div>
					
					
					
						
						
						
						
						
							<dl class="detailList">
							<dt class="heading">Returns:</dt>
							
								<dd><span class="light fixedFont">{vector}</span> 高和宽</dd>
							
							</dl>
						
						
						

					<hr />
				
					<a name="hasClass"> </a>
					<div class="fixedFont">
					
					<span class="light">{boolean}</span>
					<b>hasClass</b>(class_a, class_b)
					
					</div>
					<div class="description">
						有的时候某个元素会同时拥有两个class,这个时侯判断class_a 是否是class_b的一部分
也可以第一个参数是dom元素,第二个是要判断的className
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<span class="light fixedFont">{string|element}</span> <b>class_a</b>
									
								</dt>
								<dd></dd>
							
								<dt>
									<span class="light fixedFont">{string}</span> <b>class_b</b>
									
								</dt>
								<dd></dd>
							
							</dl>
						
						
						
						
						
							<dl class="detailList">
							<dt class="heading">Returns:</dt>
							
								<dd><span class="light fixedFont">{boolean}</span> </dd>
							
							</dl>
						
						
						

					<hr />
				
					<a name="insertAfter"> </a>
					<div class="fixedFont">
					
					
					<b>insertAfter</b>(newEl, targetEl)
					
					</div>
					<div class="description">
						向某个元素后面插入元素
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<span class="light fixedFont">{element}</span> <b>newEl</b>
									
								</dt>
								<dd>新元素</dd>
							
								<dt>
									<span class="light fixedFont">{element}</span> <b>targetEl</b>
									
								</dt>
								<dd>参考元素</dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="mixStyle"> </a>
					<div class="fixedFont">
					
					
					<b>mixStyle</b>(ele, styles)
					
					</div>
					<div class="description">
						将一个json的style表示形式赋值到一个元素的style上,直接赋值无法正常运行,所以分开赋值
例如:
mixStyle(M.dom.get("block2"),{
  backgroundColor:"#aaa",
  height:"200px"
})
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<span class="light fixedFont">{element}</span> <b>ele</b>
									
								</dt>
								<dd>操作的元素</dd>
							
								<dt>
									<span class="light fixedFont">{json}</span> <b>styles</b>
									
								</dt>
								<dd>要附加的属性</dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="place"> </a>
					<div class="fixedFont">
					
					
					<b>place</b>(ele, point)
					
					</div>
					<div class="description">
						获取或者设置位置
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<span class="light fixedFont">{element}</span> <b>ele</b>
									
								</dt>
								<dd>元素</dd>
							
								<dt>
									<span class="light fixedFont">{vector}</span> <b>point</b>
									
								</dt>
								<dd>坐标,如果不存在就获取位置,如果存在就设置位置</dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="query"> </a>
					<div class="fixedFont">
					
					<span class="light">{array}</span>
					<b>query</b>(query)
					
					</div>
					<div class="description">
						通过选择器选择元素,总是返回数组
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<span class="light fixedFont">{object}</span> <b>query</b>
									
								</dt>
								<dd>选择器</dd>
							
							</dl>
						
						
						
						
						
							<dl class="detailList">
							<dt class="heading">Returns:</dt>
							
								<dd><span class="light fixedFont">{array}</span> 元素数组</dd>
							
							</dl>
						
						
						

					<hr />
				
					<a name="removeClass"> </a>
					<div class="fixedFont">
					
					
					<b>removeClass</b>(ele, className)
					
					</div>
					<div class="description">
						从某个元素的classname里移除一个class
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<span class="light fixedFont">{element}</span> <b>ele</b>
									
								</dt>
								<dd>操作的元素</dd>
							
								<dt>
									<span class="light fixedFont">{string}</span> <b>className</b>
									
								</dt>
								<dd>移除的classname</dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="replace"> </a>
					<div class="fixedFont">
					
					
					<b>replace</b>(newEl, targetEl)
					
					</div>
					<div class="description">
						将新元素放到旧元素原来的位置,删除旧的元素
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<span class="light fixedFont">{element}</span> <b>newEl</b>
									
								</dt>
								<dd>新元素</dd>
							
								<dt>
									<span class="light fixedFont">{element}</span> <b>targetEl</b>
									
								</dt>
								<dd>被替换的元素</dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="setAttrs"> </a>
					<div class="fixedFont">
					
					
					<b>setAttrs</b>(ele, details)
					
					</div>
					<div class="description">
						一次性赋予多个属性值
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<span class="light fixedFont">{element}</span> <b>ele</b>
									
								</dt>
								<dd>元素</dd>
							
								<dt>
									<span class="light fixedFont">{json}</span> <b>details</b>
									
								</dt>
								<dd>属性的键值对</dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="setInnerHTML"> </a>
					<div class="fixedFont">
					
					
					<b>setInnerHTML</b>(el, html)
					
					</div>
					<div class="description">
						防止innerHTML的内存泄露的危险
						
						
					</div>
					
					
					
						
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							
								<dt>
									<span class="light fixedFont">{element}</span> <b>el</b>
									
								</dt>
								<dd>要操作的元素</dd>
							
								<dt>
									<span class="light fixedFont">{string}</span> <b>html</b>
									
								</dt>
								<dd>html字符串</dd>
							
							</dl>
						
						
						
						
						
						
						

					<hr />
				
					<a name="str2ele"> </a>
					<div class="fixedFont">
					
					
					<b>str2ele</b>()
					
					</div>
					<div class="description">
						
						
						
					</div>
					
					
					
						
						
						
						
						
						
						

					
				
			
			
<!-- ============================== event details ========================= -->		
			
			
			<hr />
		</div>

		
<!-- ============================== footer ================================= -->
		<div class="fineprint" style="clear:both">
			
			Documentation generated by <a href="http://code.google.com/p/jsdoc-toolkit/" target="_blank">JsDoc Toolkit</a> 2.3.2 on Mon Sep 20 2010 16:47:09 GMT+0800 (CST)
		</div>
	</body>
</html>
